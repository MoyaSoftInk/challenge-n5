version: '3.8'

services:
  challengen5.command.api:
    image: ${DOCKER_REGISTRY-}challengen5commandapi
    build:
      context: .
      dockerfile: ChallengeN5.Command/ChallengeN5.Command.API/Dockerfile
    depends_on:
      - sqlserver
      - elasticsearch
      - kafka
    environment:
      ConnectionStrings__DefaultConnection: "Server=sqlserver,1433;Database=ChallengeN5;User Id=SA;Password=1234;TrustServerCertificate=true;"
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
    command: >
      sh -c "dotnet ef database update && dotnet run"
    ports:
      - "5000:5000" 
    restart: always

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "55Kalinka-"
    ports:
      - "1433:1433"
    volumes:
      - sqlvolume:/var/opt/mssql
    container_name: sqlserver

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.1
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    container_name: zookeeper

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    container_name: kafka

  akhq:
    image: tchiotludo/akhq
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka-cluster:
              properties:
                bootstrap.servers: "kafka:9092"
    ports:
      - "8080:8080"
    depends_on:
      - kafka

volumes:
  sqlvolume:
  esdata:
